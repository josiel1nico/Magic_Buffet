/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controler.Festa;
import controler.Localizacao;
import controler.Pessoa;
import controler.Tema;
import entidadesDAO.FestaDAO;
import entidadesDAO.LocalizacaoDAO;
import javax.swing.JOptionPane;
import entidadesDAO.PessoaDAO;
import entidadesDAO.TemaDAO;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author andreza
 */
public class ResultadoTabela extends javax.swing.JFrame {

    String tipoPessoa = "";
    
    /**
     * Creates new form ResultadoTodosClientes
     */
    public ResultadoTabela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Informacoes = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        Excluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Informacoes.setText("Informações");
        Informacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InformacoesActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(504, 504, 504)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(Informacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Informacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InformacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InformacoesActionPerformed
        // TODO add your handling code here:
        if(tipoPessoa.equals("")){  
            int linha = tabela.getSelectedRow();
            Object valueAt = tabela.getValueAt(linha, 3);
            String id = valueAt.toString();             
            ResultadoFesta result = new ResultadoFesta();
              FestaDAO festa = new FestaDAO();        

                Festa f = (Festa) festa.buscar(id);
                PessoaDAO p = new PessoaDAO();
                Pessoa pessoa = (Pessoa) p.buscar(f.getPessoaCPF(), "CLIENTE");                
                result.cliente.setText(pessoa.getPnome());
                result.cliente.setEditable(false);        
                result.horario.setText(f.getHoraInicio().toString());
                result.horario.setEditable(false);
                result.convidados.setText(String.valueOf(f.getQuantidadeConvidados()));
                result.convidados.setEditable(false);
                result.itensPacote.setText(f.getPacote());
                result.itensPacote.setEditable(false);
                result.data.setText(f.getDataInicio());
                result.data.setEditable(false);
                result.estilo.setText(f.getEstiloFesta());
                result.estilo.setEditable(false);
                 if(!f.isExterno()){
                    result.local.setText("BUFFET");
                 }
                 else{
                     if(f.getLocal().equalsIgnoreCase("Endereço do cliente")){
                         
                         result.local.setText(pessoa.getRua() +" - " +  
                                 pessoa.getBairro() + " - " + pessoa.getNumero());
                     }
                     else{
                     LocalizacaoDAO localizacao = new LocalizacaoDAO();
                     Localizacao localiz;
                     String cep = f.getLocal();
                     localiz = (Localizacao)localizacao.buscar(cep);
                     result.local.setText(localiz.getCEP() + " - " + localiz.getBairro()
                              + " - " + localiz.getRua());
                     
                     
              }
                     
                     
                 }
                
                
                TemaDAO temas = new TemaDAO();
                ArrayList<Object> t = temas.buscar();
                ArrayList<Tema> tema = new ArrayList<>();
                
                for(Object theme : t)
                    tema.add((Tema) theme);
                
                String[] themes = new String[tema.size()];
                String temaSelecionado = f.getTema();                
                for (int i = 0; i < tema.size(); i++) {
                    if(tema.get(i).getTnome().equals(temaSelecionado)) {
                        String aux = themes[0];                                
                        themes[0] = temaSelecionado;
                        themes[i] = aux;                        
                    }
                    
                    themes[i] = tema.get(i).getTnome();
                }

                DefaultComboBoxModel  model = new DefaultComboBoxModel(themes);
                result.itensTema.setModel(model);
                result.itensTema.setEditable(false);
                result.itensTema.setEnabled(false);
                result.setVisible(true);            
        }
        else {
        PessoaDAO pessoa = new PessoaDAO();          
        int linha = tabela.getSelectedRow();
        Object valueAt = tabela.getValueAt(linha, 1);
        String cpf = valueAt.toString(); 
        Pessoa p = (Pessoa) pessoa.buscar(cpf,tipoPessoa);
        Resultado result = new Resultado();
        
        result.setNome(p.getPnome());
        result.setCep(p.getCep());
        result.setCidadee(p.getCidade());
        result.setCpf(p.getCpf());
        result.setBairro(p.getBairro());
        result.setTelefone(p.getTelefone());
        result.setRua(p.getRua());
        result.setNumero(String.valueOf(p.getNumero()));        
        result.setRG(String.valueOf(p.getRg()));
        result.setTipo(tipoPessoa);
        result.textoBairro.setEnabled(false);
        result.textoNome.setEnabled(false);
        result.textoCPF.setEnabled(false);
        result.textoCep.setEnabled(false);
        result.textoRG.setEnabled(false);
        result.textoTelefone.setEnabled(false);
        result.textoRua.setEnabled(false);
        result.numeroTexto.setEnabled(false);
        result.textoCidade.setEnabled(false);        
        this.dispose();
        result.setVisible(true);     
        }
    }//GEN-LAST:event_InformacoesActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        // TODO add your handling code here:
    int resposta = JOptionPane.showConfirmDialog( null,"Tem certeza que quer exlcuir o cliente do sistema?","Confirmação", JOptionPane.YES_NO_OPTION);
        if(resposta == JOptionPane.YES_OPTION){
            PessoaDAO pessoa = new PessoaDAO();
            int linha = tabela.getSelectedRow();            
            Object valueAt = tabela.getValueAt(linha, 1);
            String cpf = valueAt.toString();
            Pessoa p = (Pessoa) pessoa.buscar(cpf,"CLIENTE");        
            pessoa.remover(p);
            JOptionPane.showMessageDialog(this,"Cliente Removido");
            TelaBuscar tela = TelaBuscar.getInstance();
            tela.modelo.removeRow(linha);
        }       
            
    }//GEN-LAST:event_ExcluirActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultadoTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultadoTabela().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Informacoes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
